name: iOS CD

on:
  push:
    tags: 
      - '*'   

jobs:
  build:
    name: Build
    runs-on: macOS-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        id: pod-cache
        with:
            path: Pods
            key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-pods-
      - name: Cocoapods
        run: exec pod install
      - name: Build
        run: exec ./.github/scripts/build.sh
      
  test:
    name: Test
    needs: Build
    runs-on: macOS-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        id: pod-cache
        with:
            path: Pods
            key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-pods-
      - name: Cocoapods
        run: exec pod install
      - name: Testing
        run: exec ./.github/scripts/test.sh

  publish:
    name: Publish
    needs: Test
    runs-on: macOS-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        id: pod-cache
        with:
            path: Pods
            key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-pods-
      - name: Cocoapods
        run: exec pod install
      - name: Publish
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: exec ./.github/scripts/publish.sh

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      - name: Test Build
        run: |
          cd docs
          if [-e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [-e package.json ]; then
          npm ci
          else
          npm i
          fi
          npm run build