"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8646:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={},c=void 0,u={unversionedId:"Publish Message",id:"Publish Message",title:"Publish Message",description:"To publish message to the broker, first make sure you have provided a MessageAdapter that is able to encode your object to the binary data format. For example, if you have a data struct that you want to send as JSON. Make sure, it conforms to Encodable protocol and pass JSONMessageAdapter in MQTTClientConfig when creating the CourierClient instance.",source:"@site/docs/Publish Message.md",sourceDirName:".",slug:"/Publish Message",permalink:"/courier-iOS/docs/Publish Message",draft:!1,editUrl:"https://github.com/gojek/courier-iOS/edit/main/docs/docs/Publish Message.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Subscribe & Receive Message",permalink:"/courier-iOS/docs/Subscribe & Receive Message"},next:{title:"Event Handling",permalink:"/courier-iOS/docs/Event Handling"}},l={},p=[],d={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To publish message to the broker, first make sure you have provided a ",(0,a.kt)("inlineCode",{parentName:"p"},"MessageAdapter")," that is able to encode your object to the binary data format. For example, if you have a data struct that you want to send as JSON. Make sure, it conforms to ",(0,a.kt)("inlineCode",{parentName:"p"},"Encodable")," protocol and pass ",(0,a.kt)("inlineCode",{parentName:"p"},"JSONMessageAdapter")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"MQTTClientConfig")," when creating the ",(0,a.kt)("inlineCode",{parentName:"p"},"CourierClient")," instance."),(0,a.kt)("p",null,"You simply need to invoke ",(0,a.kt)("inlineCode",{parentName:"p"},"CourierSession/publishMessage(_:topic:qos:)")," passing the topic string and QoS enum. This is a ",(0,a.kt)("inlineCode",{parentName:"p"},"throwing")," function which can throw in case it fails to encode to data."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},'let message = Message(\n    id: UUID().uuidString,\n    name: message,\n    timestamp: Date()\n)\n        \ntry? courierService?.publishMessage(\n    message,\n    topic: "chat/1234",\n    qos: QoS.zero\n)\n')))}f.isMDXComponent=!0}}]);